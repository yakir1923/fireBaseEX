Index: app/src/main/java/com/example/firebaseex/GamePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.firebaseex;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.renderscript.ScriptGroup;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.squareup.okhttp.internal.DiskLruCache;\r\n\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class GamePage extends AppCompatActivity {\r\nprivate MyButton button;\r\nprivate int i,j;\r\nprivate TableLayout tableLayout;\r\nprivate TableRow tableRow;\r\nprivate TextView playerPoints;\r\nprivate TextView playerName;\r\nprivate TextView opponentName;\r\nprivate TextView opponentPoints;\r\nprivate int playerCurrentPoints;\r\nprivate int opponentCurrentPoints; \r\nprivate SharedPreferences.Editor editor;\r\nprivate SharedPreferences userDitale;\r\nprivate Drawable drawable;\r\nprivate int idNum;\r\nprivate ArrayList<MyButton> buttonList;\r\nprivate ArrayList<Letter> letterArrayList;\r\n private ArrayList<Button> playerArrayList;\r\nprivate TableRow playerHand;\r\nprivate TableRow opponentHand;\r\nprivate static String tempLetter;\r\nprivate int buttonId;\r\nprivate TextView timer;\r\nprivate Button nextTurn;\r\nprivate Letter letter;\r\nprivate Boolean myTurn;\r\nprivate Intent showActivity;\r\nprivate int turns=0;\r\nprivate String gameId;\r\nprivate ArrayList<MyButton> wordButton;\r\nprivate String s=\"\";\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_game_page);\r\n        userDitale=getSharedPreferences(\"login\",MODE_PRIVATE);\r\n        Thread tg=new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                int check=CheckWord(\"אבא\");\r\n                getAWord();\r\n            }\r\n\r\n        });\r\n        tg.start();\r\n\r\n        myTurn=true;\r\n        joinGame();\r\n\r\n\r\n        //startGame(\"kE18TB2qTAsmpKc2dnGT\");\r\n        db = FirebaseFirestore.getInstance();\r\n        tableLayout=findViewById(R.id.game_layout);\r\n        playerPoints=findViewById(R.id.player_points);\r\n        playerName=findViewById(R.id.player_name);\r\n        opponentName=findViewById(R.id.opponent_name);\r\n        opponentPoints=findViewById(R.id.opponent_points);\r\n        playerHand=findViewById(R.id.player_hand);\r\n        opponentHand=findViewById(R.id.opponent_hand);\r\n        playerCurrentPoints=0;\r\n        opponentCurrentPoints=0;\r\n        playerPoints.setText(\"0\");\r\n        opponentPoints.setText(\"0\");\r\n\r\n        playerName.setText(userDitale.getString(\"name\",null));\r\n        idNum=0;\r\n        timer = findViewById(R.id.timer_round);\r\n        setTimer();\r\n        nextTurn=findViewById(R.id.next_turn);\r\n        nextTurn.setBackground(getDrawable(R.drawable.active_button_color));\r\n        playerName.setText(userDitale.getString(\"email\",null));\r\n\r\n        //יצירת רשימה של אותיות\r\n        letterArrayList=new ArrayList<Letter>();\r\n        letterArrayList.add(letter=new Letter(\"א\",10,R.drawable.alef));\r\n        letterArrayList.add(letter=new Letter(\"ב\",10,R.drawable.beit));\r\n        letterArrayList.add(letter=new Letter(\"ג\",20,R.drawable.gimel));\r\n        letterArrayList.add(letter=new Letter(\"ד\",30,R.drawable.daled));\r\n        letterArrayList.add(letter=new Letter(\"ה\",10,R.drawable.hei));\r\n        letterArrayList.add(letter=new Letter(\"ו\",5,R.drawable.vav));\r\n        letterArrayList.add(letter=new Letter(\"ז\",80,R.drawable.zain));\r\n        letterArrayList.add(letter=new Letter(\"ח\",30,R.drawable.chet));\r\n        letterArrayList.add(letter=new Letter(\"ט\",40,R.drawable.tet));\r\n        letterArrayList.add(letter=new Letter(\"י\",30,R.drawable.yud));\r\n        letterArrayList.add(letter=new Letter(\"כ\",70,R.drawable.chaf));\r\n        letterArrayList.add(letter=new Letter(\"ל\",40,R.drawable.lamed));\r\n        letterArrayList.add(letter=new Letter(\"מ\",60,R.drawable.mem));\r\n        letterArrayList.add(letter=new Letter(\"נ\",30,R.drawable.non));\r\n        letterArrayList.add(letter=new Letter(\"ס\",50,R.drawable.samech));\r\n        letterArrayList.add(letter=new Letter(\"ע\",80,R.drawable.aein));\r\n        letterArrayList.add(letter=new Letter(\"פ\",90,R.drawable.pey));\r\n        letterArrayList.add(letter=new Letter(\"צ\",100,R.drawable.tzadik));\r\n        letterArrayList.add(letter=new Letter(\"ק\",60,R.drawable.kof));\r\n        letterArrayList.add(letter=new Letter(\"ר\",40,R.drawable.resha));\r\n        letterArrayList.add(letter=new Letter(\"ש\",50,R.drawable.shin));\r\n        letterArrayList.add(letter=new Letter(\"ת\",40,R.drawable.taf));\r\n\r\n\r\n        //יצירת מסך וגם שמירה של כל הכפתורים ברשימה\r\n        buttonList=new ArrayList<MyButton>();\r\n        wordButton=new ArrayList<MyButton>();\r\n        for (i=0;i<10;i++) {\r\n            tableRow=new TableRow(this);\r\n            TableRow.LayoutParams params=new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n            tableLayout.addView(tableRow);\r\n            tableRow.setGravity(Gravity.CENTER);\r\n            tableRow.setLayoutParams(params);\r\n            for (j=0;j<10;j++){\r\n                  button=new MyButton(this,i,j);\r\n                  button.setId(idNum);\r\n                  idNum++;\r\n                  button.setBackground(getDrawable(R.drawable.my_button));\r\n                  button.setText(null);\r\n                  button.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    MyButton myButton=(MyButton)view;\r\n                    //check location of button\r\n                    Toast.makeText(getApplicationContext(),myButton.getX()+\",\"+myButton.getY(),Toast.LENGTH_SHORT).show();\r\n\r\n                    if (myButton.getLetter()!=null) {\r\n                        //the player puts letters on the board\r\n                        wordButton.remove(myButton);\r\n                        tempLetter=myButton.getLetter();\r\n                        myButton.setBackground(getDrawable(R.drawable.my_button));\r\n                        myButton.setLetter(null);\r\n\r\n                    }else{\r\n\r\n                        for (Letter l:letterArrayList){\r\n                            if (l.getLett()==tempLetter)\r\n                            myButton.setBackgroundDrawable(getDrawable(l.getIcon()));\r\n                            myButton.setLetter(tempLetter);\r\n                            wordButton.add(myButton);\r\n                            TableRow.LayoutParams buttonParams=new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                            myButton.setLayoutParams(buttonParams);\r\n                        }\r\n                //       לעשות רשימה של האותיות שנכנסות לבדוק מיקום שהן נכנסו ולהכניס לפי הסדר לרשימה\r\n\r\n                        s+=tempLetter;\r\n                        tempLetter = null;\r\n\r\n                    }\r\n                }\r\n            });\r\n                tableRow.addView(button);\r\n                buttonList.add(button);\r\n        }\r\n\r\n            //יצרה של היד של השחקן\r\n        }\r\n\r\n        for (i=0;i<10;i++){\r\n            Random random=new Random();\r\n            int rndNum=random.nextInt(22);\r\n            playerHand.addView(button=new MyButton(this,0,0));\r\n            button.setBackground(getDrawable(R.drawable.my_button));\r\n            //button.setText(letterArrayList.get(rndNum).getLett());\r\n            button.setBackgroundDrawable(getDrawable(letterArrayList.get(rndNum).getIcon()));\r\n            button.setLetter(letterArrayList.get(rndNum).getLett());\r\n            TableRow.LayoutParams buttonParamsPlayer=new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n            button.setLayoutParams(buttonParamsPlayer);\r\n            //   playerArrayList.add(button);\r\n              //  button.setBackground(getDrawable(R.drawable.active_button_color));\r\n            button.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    MyButton myButton=(MyButton)view;\r\n                    if (myButton.getLetter()!=null) {\r\n                        tempLetter = myButton.getLetter();\r\n                        myButton.setLetter(null);\r\n                        myButton.setBackground(getDrawable(R.drawable.my_button));\r\n                    }\r\n                    else{\r\n                        for (Letter l:letterArrayList){\r\n                            if (l.getLett()==tempLetter){\r\n                                myButton.setBackgroundDrawable(getDrawable(l.getIcon()));\r\n                                myButton.setBackground(getDrawable(l.getIcon()));\r\n                                myButton.setLetter(tempLetter);\r\n                                TableRow.LayoutParams buttonParamsPlayer=new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                                myButton.setLayoutParams(buttonParamsPlayer);\r\n                         }\r\n                        }\r\n                        tempLetter=null;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        nextTurn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(GamePage.this,s,Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n   //טיימר\r\n    public void setTimer(){\r\n        new CountDownTimer(30000, 1000) {\r\n            public void onTick(long millisUntilFinished) {\r\n                timer.setText(\"seconds remaining: \" + millisUntilFinished / 1000);\r\n            }\r\n\r\n            public void onFinish() {\r\n                timer.setText(\"done!\");\r\n                    try {\r\n                        if (turns<10) {\r\n                            Thread.sleep(2000);\r\n                            setTimer();\r\n                            turns++;\r\n                        }\r\n\r\n                    } catch (InterruptedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n        }.start();\r\n\r\n    }\r\n    private void sendScore(){\r\n        showActivity = new Intent(GamePage.this, winnerScreen.class);\r\n        showActivity.putExtra(\"score\",Integer.toString(playerCurrentPoints));\r\n    }\r\n\r\n\r\n    private void joinGame() {\r\n        db.collection(\"games\")\r\n                .whereEqualTo(\"user2\", \"\").limit(1)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            if(task.getResult().size()==1){\r\n                                DocumentSnapshot documentSnapshot= task.getResult().getDocuments().get(0);\r\n                             //   Toast.makeText(getApplicationContext(),documentSnapshot.getId(),Toast.LENGTH_LONG).show();\r\n                                Game game=documentSnapshot.toObject(Game.class);\r\n                                if(!game.getUser1().equals(userDitale.getString(\"email\",null))) {\r\n                                    update(documentSnapshot.getId());\r\n                                }else {\r\n                                    startGame(documentSnapshot.getId());\r\n                                }\r\n                            }else{\r\n                                creatGame();\r\n                            }\r\n                        } else {\r\n                            Log.d(\"notJoined\", \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\npublic void creatGame(){\r\n        final Game game=new Game(userDitale.getString(\"email\",null),\"\",\"hello\");\r\n    db.collection(\"games\")\r\n            .add(game)\r\n            .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n                @Override\r\n                public void onSuccess(DocumentReference documentReference) {\r\n                    Log.d(\"sucsesDB\", \"DocumentSnapshot written with ID: \" + documentReference.getId());\r\n                startGame(documentReference.getId());\r\n                }\r\n            })\r\n            .addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.w(\"fDb\", \"Error adding document\", e);\r\n                }\r\n            });\r\n\r\n}\r\npublic void  startGame(String gameId){\r\n        final DocumentReference docRef = db.collection(\"games\").document(gameId);\r\n        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot,\r\n                                @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    Log.w(\"result\", \"Listen failed.\", e);\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    Log.d(\"result\", \"Current data: \" + snapshot.getData());\r\n                    Toast.makeText(getApplicationContext(),snapshot.getString(\"data\"),Toast.LENGTH_LONG).show();\r\n                    if (!snapshot.getString(\"user1\").equals(userDitale.getString(\"email\",null))){\r\n                        opponentName.setText(snapshot.getString(\"user1\").toString());\r\n                    }else {\r\n                        opponentName.setText(snapshot.getString(\"user2\").toString());\r\n                    }\r\n                } else {\r\n                    Log.d(\"result\", \"Current data: null\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public void update(final String gameId){\r\n        DocumentReference washingtonRef = db.collection(\"games\").document(gameId);\r\n\r\n// Set the \"isCapital\" field of the city 'DC'\r\n        washingtonRef\r\n                .update(\"user2\", userDitale.getString(\"email\",null))\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"sucsesUpDate\", \"DocumentSnapshot successfully updated!\");\r\n                        startGame(gameId);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"fail\", \"Error updating document\", e);\r\n                    }\r\n                });\r\n\r\n    }\r\n    //TODO find game id\r\n    public String searchForGameId(){\r\n        final String gameId=\"gameId\";\r\n  return gameId;\r\n    }\r\n    public int CheckWord(String str) {\r\n        char c = str.charAt(0);\r\n        ArrayList<InputStream> filesList = new ArrayList<>();\r\n        InputStream input1 = getResources().openRawResource(R.raw.words1);\r\n        InputStream input2 = getResources().openRawResource(R.raw.words2);\r\n        InputStream input3 = getResources().openRawResource(R.raw.words3);\r\n        InputStream input4 = getResources().openRawResource(R.raw.words4);\r\n        InputStream input5 = getResources().openRawResource(R.raw.words5);\r\n        InputStream input6 = getResources().openRawResource(R.raw.words6);\r\n        filesList.add(input1);\r\n        filesList.add(input2);\r\n        filesList.add(input3);\r\n        filesList.add(input4);\r\n        filesList.add(input5);\r\n        filesList.add(input6);\r\n        Scanner scanner1;\r\n        String line1;\r\n        int val = 0;\r\n        for (InputStream temp : filesList) {\r\n            scanner1 = new Scanner(temp);\r\n            while (scanner1.hasNext()) {\r\n                line1 = scanner1.nextLine();\r\n                if (line1.equals(str)) {\r\n                    val = 1;\r\n                }\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n    public void getAWord(){\r\n        int firstLocation;\r\n        ArrayList<MyButton> arrayList=new ArrayList<MyButton>();\r\n        for (i=0;i<10;i++) {\r\n            for (MyButton mb : wordButton) {\r\n                if (mb.getY()==wordButton.get(i).getY()){\r\n                    if (mb.getX()<wordButton.get(i).getX()){\r\n                        s=s+mb.getLetter();\r\n                        CheckWord(s);\r\n                    }\r\n                }\r\n                else if(mb.getX()==wordButton.get(i).getX()){\r\n                    if (mb.getY()<wordButton.get(i).getY()){\r\n                        s=s+mb.getLetter();\r\n                        CheckWord(s);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n//        if (c == 'א' || c == 'ב' || c == 'ג' || c == 'ד') {\r\n//            InputStream input = getResources().openRawResource(R.raw.words1);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line==str) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//\r\n//        }\r\n//        if (c == 'ה') {\r\n//            InputStream input=getResources().openRawResource(R.raw.words2);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ח' || c == 'ט' || c == 'י' || c == 'כ' || c == 'ל') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words3);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        else if (c == 'מ' || c == 'נ') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words4);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ס' || c == 'ע' || c == 'פ' || c == 'צ' || c == 'ק' || c == 'ר' || c == 'ש' || c == 'ת') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words5);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ו' || c == 'ז') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words6);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        return 0;\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/firebaseex/GamePage.java	(revision 1ecff68ed958f06659c1024451be0b7c590dfaa6)
+++ app/src/main/java/com/example/firebaseex/GamePage.java	(date 1604572263423)
@@ -303,6 +303,7 @@
 
 public void creatGame(){
         final Game game=new Game(userDitale.getString("email",null),"","hello");
+        String gameId;
     db.collection("games")
             .add(game)
             .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
