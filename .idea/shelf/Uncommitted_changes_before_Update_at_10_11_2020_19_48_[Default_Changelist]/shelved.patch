Index: app/src/main/java/com/example/firebaseex/GamePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.firebaseex;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.renderscript.ScriptGroup;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.squareup.okhttp.internal.DiskLruCache;\r\n\r\nimport java.io.InputStream;\r\nimport java.lang.reflect.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\nimport static java.util.Collections.checkedMap;\r\nimport static java.util.Collections.swap;\r\n\r\npublic class GamePage extends AppCompatActivity {\r\n    private MyButton button;\r\n    private int i, j;\r\n    private TableLayout tableLayout;\r\n    private TableRow tableRow;\r\n    private TextView playerPoints;\r\n    private TextView playerName;\r\n    private TextView opponentName;\r\n    private TextView opponentPoints;\r\n    private int playerCurrentPoints;\r\n    private int opponentCurrentPoints;\r\n    private SharedPreferences.Editor editor;\r\n    private SharedPreferences userDitale;\r\n    private Drawable drawable;\r\n    private int idNum;\r\n    private ArrayList<MyButton> buttonList;\r\n    private ArrayList<Letter> letterArrayList;\r\n    private ArrayList<MyButton> playerArrayList;\r\n    private TableRow playerHand;\r\n    private TableRow opponentHand;\r\n    private static String tempLetter;\r\n    private int buttonId;\r\n    private TextView timer;\r\n    private Button nextTurn;\r\n    private Letter letter;\r\n    private static Boolean myTurn;\r\n    private Intent showActivity;\r\n    private int turns = 0;\r\n    private static String gameId;\r\n    private ArrayList<MyButton> wordButton;\r\n    private static String s = \"\";\r\n    private int score=0;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_game_page);\r\n        userDitale = getSharedPreferences(\"login\", MODE_PRIVATE);\r\n        editor = userDitale.edit();\r\n\r\n\r\n        joinGame();\r\n        myTurn=false;\r\n        userDitale = getSharedPreferences(\"login\", MODE_PRIVATE);\r\n       gameId=userDitale.getString(\"game_id\",null);\r\n       // gameId= getSharedPreferences(\"game_id\", \"\");\r\n\r\n        db = FirebaseFirestore.getInstance();\r\n        tableLayout = findViewById(R.id.game_layout);\r\n        playerPoints = findViewById(R.id.player_points);\r\n        playerName = findViewById(R.id.player_name);\r\n        opponentName = findViewById(R.id.opponent_name);\r\n        opponentPoints = findViewById(R.id.opponent_points);\r\n        playerHand = findViewById(R.id.player_hand);\r\n        opponentHand = findViewById(R.id.opponent_hand);\r\n        playerCurrentPoints = 0;\r\n        opponentCurrentPoints = 0;\r\n        playerPoints.setText(String.valueOf(score));\r\n        opponentPoints.setText(\"0\");\r\n\r\n        playerName.setText(userDitale.getString(\"name\", null));\r\n        idNum = 0;\r\n        timer = findViewById(R.id.timer_round);\r\n        setTimer();\r\n        nextTurn = findViewById(R.id.next_turn);\r\n        nextTurn.setBackground(getDrawable(R.drawable.active_button_color));\r\n        playerName.setText(userDitale.getString(\"email\", null));\r\n\r\n        //יצירת רשימה של אותיות\r\n        letterArrayList = new ArrayList<Letter>();\r\n        letterArrayList.add(letter = new Letter(\"א\", 10, R.drawable.alef));\r\n        letterArrayList.add(letter = new Letter(\"ב\", 10, R.drawable.beit));\r\n        letterArrayList.add(letter = new Letter(\"ג\", 20, R.drawable.gimel));\r\n        letterArrayList.add(letter = new Letter(\"ד\", 30, R.drawable.daled));\r\n        letterArrayList.add(letter = new Letter(\"ה\", 10, R.drawable.hei));\r\n        letterArrayList.add(letter = new Letter(\"ו\", 5, R.drawable.vav));\r\n        letterArrayList.add(letter = new Letter(\"ז\", 80, R.drawable.zain));\r\n        letterArrayList.add(letter = new Letter(\"ח\", 30, R.drawable.chet));\r\n        letterArrayList.add(letter = new Letter(\"ט\", 40, R.drawable.tet));\r\n        letterArrayList.add(letter = new Letter(\"י\", 30, R.drawable.yud));\r\n        letterArrayList.add(letter = new Letter(\"כ\", 70, R.drawable.chaf));\r\n        letterArrayList.add(letter = new Letter(\"ל\", 40, R.drawable.lamed));\r\n        letterArrayList.add(letter = new Letter(\"מ\", 60, R.drawable.mem));\r\n        letterArrayList.add(letter = new Letter(\"נ\", 30, R.drawable.non));\r\n        letterArrayList.add(letter = new Letter(\"ס\", 50, R.drawable.samech));\r\n        letterArrayList.add(letter = new Letter(\"ע\", 80, R.drawable.aein));\r\n        letterArrayList.add(letter = new Letter(\"פ\", 90, R.drawable.pey));\r\n        letterArrayList.add(letter = new Letter(\"צ\", 100, R.drawable.tzadik));\r\n        letterArrayList.add(letter = new Letter(\"ק\", 60, R.drawable.kof));\r\n        letterArrayList.add(letter = new Letter(\"ר\", 40, R.drawable.resha));\r\n        letterArrayList.add(letter = new Letter(\"ש\", 50, R.drawable.shin));\r\n        letterArrayList.add(letter = new Letter(\"ת\", 40, R.drawable.taf));\r\n\r\n\r\n        playerArrayList = new ArrayList<MyButton>();\r\n\r\n        //יצירת מסך וגם שמירה של כל הכפתורים ברשימה\r\n        buttonList = new ArrayList<MyButton>();\r\n        wordButton = new ArrayList<MyButton>();\r\n\r\n        for (i = 0; i < 9; i++) {\r\n            tableRow = new TableRow(this);\r\n            TableRow.LayoutParams params = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n            tableLayout.addView(tableRow);\r\n            tableRow.setGravity(Gravity.CENTER);\r\n            tableRow.setLayoutParams(params);\r\n            for (j = 0; j < 9; j++) {\r\n                button = new MyButton(this, i, j);\r\n                button.setId(idNum);\r\n                idNum++;\r\n                button.setBackground(getDrawable(R.drawable.my_button));\r\n              //  button.setHeight(ViewGroup.LayoutParams.MATCH_PARENT);\r\n                button.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        MyButton myButton = (MyButton) view;\r\n                        if (myButton.getSetted()==false) {\r\n                            //check location of button\r\n                           // Toast.makeText(getApplicationContext(), myButton.getX() + \",\" + myButton.getY(), Toast.LENGTH_SHORT).show();\r\n                            if (myButton.getLetter() !=null) {\r\n                                //the player puts letters on the board\r\n                                wordButton.remove(myButton);\r\n                                tempLetter = myButton.getLetter();\r\n                                myButton.setBackground(getDrawable(R.drawable.my_button));\r\n                                myButton.setLetter(null);\r\n\r\n                            } else {\r\n\r\n                                for (Letter l : letterArrayList) {\r\n                                    if (l.getLett() == tempLetter)\r\n                                        myButton.setBackgroundDrawable(getDrawable(l.getIcon()));\r\n                                    myButton.setLetter(tempLetter);\r\n                                    TableRow.LayoutParams buttonParams = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                                    myButton.setLayoutParams(buttonParams);\r\n                                }\r\n                                //       לעשות רשימה של האותיות שנכנסות לבדוק מיקום שהן נכנסו ולהכניס לפי הסדר לרשימה\r\n\r\n                                //     s+=tempLetter;\r\n                                wordButton.add(myButton);\r\n                                tempLetter =null;\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                tableRow.addView(button);\r\n                buttonList.add(button);\r\n            }\r\n\r\n            //יצרה של היד של השחקן\r\n        }\r\n\r\n        getPlayerCards();\r\n\r\n        //TODO\r\n        nextTurn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //checkC();\r\n                getAWord();\r\n                CheckWord(s);\r\n\r\n               // Toast.makeText(GamePage.this, s+\"\", Toast.LENGTH_SHORT).show();\r\n                for (MyButton myButton:wordButton){\r\n                    myButton.setSetted(true);\r\n                    for (Letter letter:letterArrayList){\r\n                        if (myButton.getLetter()==letter.getLett()){\r\n                            score+=letter.getScoring();\r\n                        }\r\n                    }\r\n                }\r\n                String a=\"\";\r\n                for (MyButton button:buttonList)\r\n                    if (button.getLetter()!=null)\r\n                    a+=button.getLetter();\r\n                    else {\r\n                        a+=\" \";\r\n                    }\r\n               chh(a);\r\n                playerPoints.setText(String.valueOf(score));\r\n                wordButton.removeAll(wordButton);\r\n                s=\"\";\r\n\r\n\r\n               if(myTurn==true) {\r\n                   for (MyButton b : playerArrayList) {\r\n                       b.setEnabled(false);\r\n                   }\r\n               }\r\n\r\n                resetPlayerHand();\r\n               tempLetter=null;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    public void getPlayerCards() {\r\n        for (i = 0; i < 10; i++) {\r\n            Random random = new Random();\r\n            int rndNum = random.nextInt(22);\r\n            playerHand.addView(button = new MyButton(this, 0, 0));\r\n            button.setBackground(getDrawable(R.drawable.my_button));\r\n            //button.setText(letterArrayList.get(rndNum).getLett());\r\n            button.setBackgroundDrawable(getDrawable(letterArrayList.get(rndNum).getIcon()));\r\n            button.setLetter(letterArrayList.get(rndNum).getLett());\r\n            TableRow.LayoutParams buttonParamsPlayer = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n            button.setLayoutParams(buttonParamsPlayer);\r\n            //   playerArrayList.add(button);\r\n            //  button.setBackground(getDrawable(R.drawable.active_button_color));\r\n\r\n            playerArrayList.add(button);\r\n            button.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    MyButton myButton = (MyButton) view;\r\n                    if (myButton.getLetter() !=null) {\r\n                        tempLetter = myButton.getLetter();\r\n                        myButton.setLetter(null);\r\n                        myButton.setBackground(getDrawable(R.drawable.my_button));\r\n                    } else {\r\n                        for (Letter l : letterArrayList) {\r\n                            if (l.getLett() == tempLetter) {\r\n                                myButton.setBackgroundDrawable(getDrawable(l.getIcon()));\r\n                                myButton.setBackground(getDrawable(l.getIcon()));\r\n                                myButton.setLetter(tempLetter);\r\n                                TableRow.LayoutParams buttonParamsPlayer = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                                myButton.setLayoutParams(buttonParamsPlayer);\r\n                            }\r\n                        }\r\n                        tempLetter =null;\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void chh(String a){\r\n        DocumentReference DR=db.collection(\"games\").document(userDitale.getString(\"game_id\",null));\r\n        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"data2\",a).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n            }\r\n\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(getApplicationContext(),e.getMessage(),Toast.LENGTH_LONG).show();\r\n                Log.e(\"fail\", \"onFailure:\"+e.getMessage() );\r\n            }\r\n        });\r\n        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"user1turn\",!myTurn);\r\n        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"opponentPoints\",score);\r\n    }\r\n\r\n\r\n    //טיימר\r\n    public void setTimer() {\r\n        new CountDownTimer(30000, 1000) {\r\n            public void onTick(long millisUntilFinished) {\r\n                timer.setText(\"seconds remaining: \" + millisUntilFinished / 1000);\r\n            }\r\n\r\n            public void onFinish() {\r\n                timer.setText(\"done!\");\r\n                try {\r\n                    if (turns < 10) {\r\n                        Thread.sleep(2000);\r\n                        setTimer();\r\n                        turns++;\r\n                        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"user1turn\",!myTurn);\r\n                        resetPlayerHand();\r\n                        tempLetter=null;\r\n                    }\r\n\r\n                } catch (InterruptedException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }.start();\r\n\r\n    }\r\n    public void resetPlayerHand(){\r\n        for (MyButton b:playerArrayList){\r\n            Random random = new Random();\r\n            int rndNum = random.nextInt(22);\r\n            if (b.getLetter()==null) {\r\n                b.setBackground(getDrawable(R.drawable.my_button));\r\n                b.setBackgroundDrawable(getDrawable(letterArrayList.get(rndNum).getIcon()));\r\n                b.setLetter(letterArrayList.get(rndNum).getLett());\r\n                TableRow.LayoutParams buttonParamsPlayer = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                b.setLayoutParams(buttonParamsPlayer);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void sendScore() {\r\n        showActivity = new Intent(GamePage.this, winnerScreen.class);\r\n        showActivity.putExtra(\"score\", Integer.toString(playerCurrentPoints));\r\n    }\r\n\r\n\r\n    private void joinGame() {\r\n        db.collection(\"games\")\r\n                .whereEqualTo(\"user2\", \"\").limit(1)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            if (task.getResult().size() == 1) {\r\n                                DocumentSnapshot documentSnapshot = task.getResult().getDocuments().get(0);\r\n                              //   Toast.makeText(getApplicationContext(),documentSnapshot.getId(),Toast.LENGTH_LONG).show();\r\n                                editor.putString(\"game_id\", documentSnapshot.getId());\r\n                                editor.commit();\r\n                                editor.apply();\r\n                                Game game = documentSnapshot.toObject(Game.class);\r\n\r\n                                if (!game.getUser1().equals(userDitale.getString(\"email\", null))) {\r\n                                    update(documentSnapshot.getId());\r\n                                } else {\r\n                                    startGame(documentSnapshot.getId());\r\n                                }\r\n                            } else {\r\n                                creatGame();\r\n                            }\r\n                        } else {\r\n                            Log.d(\"notJoined\", \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void creatGame() {\r\n        final Game game = new Game(userDitale.getString(\"email\", null), \"\", \"hello\");\r\n        db.collection(\"games\")\r\n                .add(game)\r\n                .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {\r\n                    @Override\r\n                    public void onSuccess(DocumentReference documentReference) {\r\n                        Log.d(\"sucsesDB\", \"DocumentSnapshot written with ID: \" + documentReference.getId());\r\n                        editor.putString(\"game_id\", documentReference.getId());\r\n                        editor.commit();\r\n                        editor.apply();\r\n                        startGame(documentReference.getId());\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"fDb\", \"Error adding document\", e);\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    public void startGame(final String gameId) {\r\n\r\n        final DocumentReference docRef = db.collection(\"games\").document(gameId);\r\n        editor.putString(\"game_id\", gameId);\r\n        editor.commit();\r\n        editor.apply();\r\n        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable final DocumentSnapshot snapshot,\r\n                                @Nullable FirebaseFirestoreException e) {\r\n                if (e != null) {\r\n                    Log.w(\"result\", \"Listen failed.\", e);\r\n                    return;\r\n                }\r\n                if (snapshot != null && snapshot.exists()) {\r\n                    Log.d(\"result\", \"Current data: \" + snapshot.getData());\r\n                   // Toast.makeText(getApplicationContext(), snapshot.getString(\"data\"), Toast.LENGTH_LONG).show();\r\n                    if (!snapshot.getString(\"user1\").equals(userDitale.getString(\"email\", null))) {\r\n                        opponentName.setText(snapshot.getString(\"user1\").toString());\r\n                       myTurn=!snapshot.getBoolean(\"user1turn\");\r\n                       String user2name=userDitale.getString(\"name\",null);\r\n                        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"user2Name\",userDitale.getString(\"name\",null));\r\n//                       opponentCurrentPoints=Integer.parseInt(snapshot.getString(\"opponentPoints\"));\r\n                    } else {\r\n                        opponentName.setText(snapshot.getString(\"user2\").toString());\r\n                        myTurn=snapshot.getBoolean(\"user1turn\");\r\n                        db.collection(\"games\").document(userDitale.getString(\"game_id\",null)).update(\"user1Name\",userDitale.getString(\"name\",null));\r\n                    }\r\n                    String data2 = (String) snapshot.get(\"data2\");\r\n                    if(data2!=null)\r\n                    {\r\n                        Log.d(\"length_data2\", \"onEvent: \"+data2.length()+\" \"+data2);\r\n                     //  getRESS(data2);\r\n                        getRESS2(data2);\r\n                        int x;\r\n                    }\r\n                } else {\r\n                    Log.d(\"result\", \"Current data: null\");\r\n                }\r\n//55\r\n            }\r\n        });\r\n    }\r\n\r\n    public void getRESS2(String data2){\r\n        //Toast.makeText(getApplicationContext(),data2,Toast.LENGTH_LONG).show();\r\n        char[] c=data2.toCharArray() ;\r\n                String ch = \"\";\r\n                MyButton button ;\r\n        for (int a=0;a<80;a++){\r\n            ch = String.valueOf(c[a]);\r\n            button =buttonList.get(a);\r\n         //   buttonList.get(a).setLetter(String.valueOf(c[a]));\r\n            if (!ch.equalsIgnoreCase(\" \"))\r\n              button.setLetter(ch);\r\n       //     if (!(String.valueOf(c[a]).equalsIgnoreCase(\" \"))){\r\n            if(!ch.equalsIgnoreCase(\" \")){\r\n                for (Letter l:letterArrayList){\r\n                    if (ch.equalsIgnoreCase(l.getLett())){\r\n                        buttonList.get(a).setBackground(getDrawable(l.getIcon()));\r\n                        TableRow.LayoutParams buttonParams = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                        buttonList.get(a).setLayoutParams(buttonParams);\r\n                        buttonList.get(a).setSetted(true);\r\n                    }\r\n                }\r\n          //  }\r\n                //aa\r\n            }\r\n        }\r\n    }\r\n\r\n    public void  getRESS(ArrayList<String> data2){\r\n        Toast.makeText(getApplicationContext(),data2.get(data2.size()-1),Toast.LENGTH_LONG).show();\r\n        String[] res = data2.get(data2.size()-1).split(\"\\\\$\");\r\n        if(!userDitale.getString(\"email\",null).equalsIgnoreCase(res[0]))\r\n        {\r\n            String letters = res[4];\r\n            ArrayList<MyButton> newButtonList=new ArrayList<MyButton>();\r\n            Toast.makeText(getApplicationContext(),res[4],Toast.LENGTH_LONG).show();\r\n            int row=Integer.parseInt(res[1]);\r\n            int col=Integer.parseInt(res[2]);\r\n            for (int i=0;i<letters.length();i++) {\r\n                String s1 = letters.charAt(i) + \"\";\r\n                int pos = row * 9 + col;\r\n            MyButton button =  buttonList.get(pos);\r\n            button.setLetter(s1);\r\n                for (Letter l : letterArrayList) {\r\n                    if (l.getLett().equalsIgnoreCase(button.getLetter())) {\r\n                        button.setBackground(getDrawable(l.getIcon()));\r\n                        TableRow.LayoutParams buttonParams = new TableRow.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n                        button.setLayoutParams(buttonParams);\r\n                    }\r\n                }\r\n                if (res[3].equalsIgnoreCase(\"R\")) {\r\n                    col--;\r\n                } else {\r\n                    row++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void update(final String gameId) {\r\n        DocumentReference washingtonRef = db.collection(\"games\").document(gameId);\r\n        editor.putString(\"game_id\", gameId);\r\n        editor.commit();\r\n        editor.apply();\r\n        // Set the \"isCapital\" field of the city 'DC'\r\n        washingtonRef\r\n                .update(\"user2\", userDitale.getString(\"email\", null))\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"sucsesUpDate\", \"DocumentSnapshot successfully updated!\");\r\n                        startGame(gameId);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(\"fail\", \"Error updating document\", e);\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    public void CheckWord(final String str) {\r\n        Thread thread=new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n\r\n                final DocumentReference docRefW = db.collection(\"translation\").document(s);\r\n\r\n\r\n                ArrayList<InputStream> filesList = new ArrayList<>();\r\n                InputStream input1 = getResources().openRawResource(R.raw.words1);\r\n                InputStream input2 = getResources().openRawResource(R.raw.words2);\r\n                InputStream input3 = getResources().openRawResource(R.raw.words3);\r\n                InputStream input4 = getResources().openRawResource(R.raw.words4);\r\n                InputStream input5 = getResources().openRawResource(R.raw.words5);\r\n                InputStream input6 = getResources().openRawResource(R.raw.words6);\r\n                filesList.add(input1);\r\n                filesList.add(input2);\r\n                filesList.add(input3);\r\n                filesList.add(input4);\r\n                filesList.add(input5);\r\n                filesList.add(input6);\r\n                Scanner scanner1;\r\n                String line1;\r\n                int val = 0;\r\n                for (InputStream temp : filesList) {\r\n                    scanner1 = new Scanner(temp);\r\n                    while (scanner1.hasNext()) {\r\n                        line1 = scanner1.nextLine();\r\n                        if (line1.equals(str)) {\r\n                            val = 1;\r\n                        }\r\n                    }\r\n                }\r\n                test(val);\r\n            }\r\n        });\r\n\r\n    }\r\n    public void test(int val){\r\n        Toast.makeText(getApplicationContext(),String.valueOf(val),Toast.LENGTH_LONG).show();\r\n    }\r\n\r\n    public void getAWord() {\r\n\r\n        try {\r\n        ArrayList<MyButton> arrayList = new ArrayList();\r\n        if (wordButton.get(0).getX()==wordButton.get(1).getX()) {\r\n            boolean flag = true;\r\n            for (int i = 0; i < wordButton.size() && flag; i++) {\r\n                flag = false;\r\n                for (int j = 0; j < wordButton.size() - i - 1; j++) {\r\n                    if (wordButton.get(j).getY() < wordButton.get(j + 1).getY()) {\r\n                        flag = true;\r\n                        swap(wordButton, j, j + 1);\r\n                    }\r\n                }\r\n            }\r\n        }else {\r\n            boolean flag = true;\r\n            for (int i = 0; i < wordButton.size() && flag; i++) {\r\n                flag = false;\r\n                for (int j = 0; j < wordButton.size() - i - 1; j++) {\r\n                    if (wordButton.get(j).getX() > wordButton.get(j + 1).getX()) {\r\n                        flag = true;\r\n                        swap(wordButton, j, j + 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        }catch (Exception e){\r\n            Log.e(\"eror_thread\", \"getAWord: \"+e.getMessage());\r\n        }\r\n        for (MyButton mb:wordButton){\r\n            s=s+mb.getLetter();\r\n        }\r\n        Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();\r\n    }\r\n    public void checkC(){\r\n        String string=\"\";\r\n        boolean thisTurn=false;\r\n        ArrayList<MyButton> tempList=new ArrayList<MyButton>();\r\n        for (int i=0;i<9;i++) {\r\n            for (int j = 0; j < 73; j += 9) {\r\n                if (buttonList.get(j+i).getLetter() != null) {\r\n                    tempList.add(buttonList.get(j+i));\r\n                         thisTurn=false;\r\n                    for (MyButton myButton2 : tempList) {\r\n                        if (wordButton.contains(myButton2)) {\r\n                            thisTurn=true;\r\n                        }\r\n                    }\r\n                    }\r\n                for (MyButton myButton2 : tempList) {\r\n                    if (thisTurn){\r\n                        string += myButton2.getLetter();\r\n                    }\r\n                }\r\n\r\n            }\r\n            Toast.makeText(getApplicationContext(), \" \" + string, Toast.LENGTH_LONG).show();\r\n            break;\r\n        }\r\n        }\r\n\r\n    private void scanLine(char charXOrY,int cordinateEq) {\r\n        if (charXOrY=='x') {\r\n            for (MyButton button : buttonList) {\r\n                if (button.getY()==cordinateEq&&button.getLetter()!=null){\r\n                    if (button.getSetted()) {\r\n                        wordButton.add(button);\r\n                    }\r\n                }\r\n            }\r\n        } else{\r\n                for (MyButton button : buttonList) {\r\n                    if (button.getX()==cordinateEq&&button.getLetter()!=null){\r\n                        if (button.getSetted()) {\r\n                            wordButton.add(button);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n    }\r\n}\r\n\r\n//        if (c == 'א' || c == 'ב' || c == 'ג' || c == 'ד') {\r\n//            InputStream input = getResources().openRawResource(R.raw.words1);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line==str) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//\r\n//        }\r\n//        if (c == 'ה') {\r\n//            InputStream input=getResources().openRawResource(R.raw.words2);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ח' || c == 'ט' || c == 'י' || c == 'כ' || c == 'ל') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words3);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        else if (c == 'מ' || c == 'נ') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words4);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ס' || c == 'ע' || c == 'פ' || c == 'צ' || c == 'ק' || c == 'ר' || c == 'ש' || c == 'ת') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words5);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        if (c == 'ו' || c == 'ז') {\r\n//            InputStream input =getResources().openRawResource(R.raw.words6);\r\n//            Scanner scan = new Scanner(input);\r\n//            while (scan.hasNext()) {\r\n//                String line = scan.nextLine();\r\n//                if (line.equalsIgnoreCase(str.trim())) {\r\n//                    return 1;\r\n//                } else {\r\n//                    return 0;\r\n//                }\r\n//            }\r\n//        }\r\n//        return 0;\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/firebaseex/GamePage.java	(revision 732649e1a48861a0dd29809198bf2ae75a8c7b34)
+++ app/src/main/java/com/example/firebaseex/GamePage.java	(date 1605030517959)
@@ -621,32 +621,6 @@
         }
         Toast.makeText(getApplicationContext(),s,Toast.LENGTH_LONG).show();
     }
-    public void checkC(){
-        String string="";
-        boolean thisTurn=false;
-        ArrayList<MyButton> tempList=new ArrayList<MyButton>();
-        for (int i=0;i<9;i++) {
-            for (int j = 0; j < 73; j += 9) {
-                if (buttonList.get(j+i).getLetter() != null) {
-                    tempList.add(buttonList.get(j+i));
-                         thisTurn=false;
-                    for (MyButton myButton2 : tempList) {
-                        if (wordButton.contains(myButton2)) {
-                            thisTurn=true;
-                        }
-                    }
-                    }
-                for (MyButton myButton2 : tempList) {
-                    if (thisTurn){
-                        string += myButton2.getLetter();
-                    }
-                }
-
-            }
-            Toast.makeText(getApplicationContext(), " " + string, Toast.LENGTH_LONG).show();
-            break;
-        }
-        }
 
     private void scanLine(char charXOrY,int cordinateEq) {
         if (charXOrY=='x') {
